<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="32c665b1-7adb-4fc5-acb7-034cc96442bb" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/python_modules/clean_address_data.py" beforeDir="false" afterPath="$PROJECT_DIR$/python_modules/clean_address_data.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/python_modules/clean_business_data.py" beforeDir="false" afterPath="$PROJECT_DIR$/python_modules/clean_business_data.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/python_modules/clean_parcel_data.py" beforeDir="false" afterPath="$PROJECT_DIR$/python_modules/clean_parcel_data.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/python_modules/clean_permit_data.py" beforeDir="false" afterPath="$PROJECT_DIR$/python_modules/clean_permit_data.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/python_modules/merge_census_data.py" beforeDir="false" afterPath="$PROJECT_DIR$/python_modules/merge_census_data.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1mw7qANFqoi1I7AfQxfXw8Pteer" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/python_modules/misc_files" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PythonContentEntriesConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/python_modules" />
      <recent name="$PROJECT_DIR$/output" />
      <recent name="$PROJECT_DIR$/python_modules/helper_files" />
      <recent name="$PROJECT_DIR$/python_modules/misc_files" />
      <recent name="$PROJECT_DIR$/python_modules/data_cleaning" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/python_modules/misc_files" />
      <recent name="$PROJECT_DIR$/python_modules/helper_files" />
      <recent name="$PROJECT_DIR$/python_modules" />
      <recent name="$PROJECT_DIR$/classifier" />
    </key>
  </component>
  <component name="RunManager" selected="Python.top_file">
    <configuration name="clean_address_data" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="boring_cities" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/python_modules/data_cleaning" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/python_modules/clean_address_data.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="helper_functions" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="boring_cities" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/python_modules" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/python_modules/helper_functions.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="make_business_vars (1)" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="boring_cities" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/python_modules/helper_files" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/python_modules/helper_files/make_business_vars.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="make_business_vars" type="PythonConfigurationType" factoryName="Python" singleton="false" temporary="true">
      <module name="boring_cities" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/make_business_vars.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="top_file" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="boring_cities" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/python_modules" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/python_modules/top_file.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.clean_address_data" />
      <item itemvalue="Python.helper_functions" />
      <item itemvalue="Python.make_business_vars (1)" />
      <item itemvalue="Python.make_business_vars" />
      <item itemvalue="Python.top_file" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python.top_file" />
        <item itemvalue="Python.helper_functions" />
        <item itemvalue="Python.clean_address_data" />
        <item itemvalue="Python.make_business_vars (1)" />
        <item itemvalue="Python.make_business_vars" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="32c665b1-7adb-4fc5-acb7-034cc96442bb" name="Default Changelist" comment="" />
      <created>1601251025917</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1601251025917</updated>
    </task>
    <servers />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="WindowStateProjectService">
    <state width="1419" height="265" key="GridCell.Tab.0.bottom" timestamp="1618012047418">
      <screen x="0" y="0" width="1440" height="900" />
    </state>
    <state width="1419" height="265" key="GridCell.Tab.0.bottom/0.0.1440.900/1440.0.1920.1080@0.0.1440.900" timestamp="1617910596645" />
    <state width="1419" height="265" key="GridCell.Tab.0.bottom/0.0.1440.900@0.0.1440.900" timestamp="1618012047418" />
    <state width="1419" height="265" key="GridCell.Tab.0.center" timestamp="1618012047417">
      <screen x="0" y="0" width="1440" height="900" />
    </state>
    <state width="1419" height="265" key="GridCell.Tab.0.center/0.0.1440.900/1440.0.1920.1080@0.0.1440.900" timestamp="1617910596643" />
    <state width="1419" height="265" key="GridCell.Tab.0.center/0.0.1440.900@0.0.1440.900" timestamp="1618012047417" />
    <state width="1419" height="265" key="GridCell.Tab.0.left" timestamp="1618012047416">
      <screen x="0" y="0" width="1440" height="900" />
    </state>
    <state width="1419" height="265" key="GridCell.Tab.0.left/0.0.1440.900/1440.0.1920.1080@0.0.1440.900" timestamp="1617910596642" />
    <state width="1419" height="265" key="GridCell.Tab.0.left/0.0.1440.900@0.0.1440.900" timestamp="1618012047416" />
    <state width="1419" height="265" key="GridCell.Tab.0.right" timestamp="1618012047417">
      <screen x="0" y="0" width="1440" height="900" />
    </state>
    <state width="1419" height="265" key="GridCell.Tab.0.right/0.0.1440.900/1440.0.1920.1080@0.0.1440.900" timestamp="1617910596643" />
    <state width="1419" height="265" key="GridCell.Tab.0.right/0.0.1440.900@0.0.1440.900" timestamp="1618012047417" />
    <state x="229" y="89" key="SettingsEditor" timestamp="1618012583730">
      <screen x="0" y="0" width="1440" height="900" />
    </state>
    <state x="229" y="89" key="SettingsEditor/0.0.1440.900/1440.0.1920.1080@0.0.1440.900" timestamp="1617901552392" />
    <state x="229" y="89" key="SettingsEditor/0.0.1440.900/1440.23.1920.1057@0.0.1440.900" timestamp="1617825260481" />
    <state x="229" y="89" key="SettingsEditor/0.0.1440.900@0.0.1440.900" timestamp="1618012583730" />
    <state x="399" y="297" key="com.intellij.ide.util.TipDialog" timestamp="1618012058275">
      <screen x="0" y="0" width="1440" height="900" />
    </state>
    <state x="399" y="282" key="com.intellij.ide.util.TipDialog/0.0.1440.855/1440.23.1920.1057@0.0.1440.855" timestamp="1617726319281" />
    <state x="399" y="297" key="com.intellij.ide.util.TipDialog/0.0.1440.900/1440.0.1920.1080@0.0.1440.900" timestamp="1617901566191" />
    <state x="399" y="297" key="com.intellij.ide.util.TipDialog/0.0.1440.900@0.0.1440.900" timestamp="1618012058275" />
    <state x="371" y="174" key="search.everywhere.popup" timestamp="1617907207355">
      <screen x="0" y="0" width="1440" height="900" />
    </state>
    <state x="371" y="174" key="search.everywhere.popup/0.0.1440.900/1440.0.1920.1080@0.0.1440.900" timestamp="1617907207355" />
    <state x="1935" y="213" key="search.everywhere.popup/0.23.1440.877/1440.23.1920.980@1440.23.1920.980" timestamp="1612287971151" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/clean_parcel_data.py</url>
          <line>14</line>
          <option name="timeStamp" value="23" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/make_business_vars.py</url>
          <line>69</line>
          <option name="timeStamp" value="34" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/clean_business_data.py</url>
          <line>188</line>
          <option name="timeStamp" value="36" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/clean_business_data.py</url>
          <line>296</line>
          <option name="timeStamp" value="37" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/clean_business_data.py</url>
          <line>314</line>
          <option name="timeStamp" value="39" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/clean_business_data.py</url>
          <line>137</line>
          <option name="timeStamp" value="40" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/clean_business_data.py</url>
          <line>206</line>
          <option name="timeStamp" value="43" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/clean_business_data.py</url>
          <line>158</line>
          <option name="timeStamp" value="45" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/clean_phonebook_data.py</url>
          <line>48</line>
          <option name="timeStamp" value="51" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/clean_phonebook_data.py</url>
          <line>72</line>
          <option name="timeStamp" value="57" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/clean_phonebook_data.py</url>
          <line>55</line>
          <option name="timeStamp" value="58" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/clean_phonebook_data.py</url>
          <line>91</line>
          <option name="timeStamp" value="59" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/clean_business_data.py</url>
          <line>259</line>
          <option name="timeStamp" value="60" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/make_business_vars.py</url>
          <line>7</line>
          <option name="timeStamp" value="61" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/python_modules/name_parsing.py</url>
          <line>352</line>
          <option name="timeStamp" value="64" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="PythonConfigurationType">
        <watch expression="sf_bus.groupby(['naics_descr', 'naics']).agg(**{'num':('location_id','count')}).sort_values('num',ascending=False)" language="Python" />
        <watch expression="la_bus.groupby(['naics_descr', 'naics']).agg(**{'num':('location_id','count')}).sort_values('num',ascending=False)" language="Python" />
        <watch expression="sf_bus.sort_values('num_locations', ascending=False)" language="Python" />
      </configuration>
    </watches-manager>
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="evaluateCodeFragment">
      <expression>
        <expression-string>def iteratively_process_partial(df, max_partial):
    while max_partial &gt; 0:
        df[n_text] = np.where(
                (df['running_partial'].shift(1) == max_partial) &amp; (df[classification_col].shift(1) == 'partial'),
                df[n_text]*df[n_text].shift(1)
            )
        max_partial = max_partial - 1
    return df</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>max_partial = df[df[classification_col]=='partial']['running_partial'].max()
    def iteratively_process_partial(df, max_partial):
        while max_partial &gt; 0:
            df[n_text] = np.where(
                (df['running_partial'].shift(1) == max_partial) &amp; (df[classification_col].shift(1) == 'partial'),
                df[n_text]*df[n_text].shift(1)
            )
            max_partial = max_partial - 1
        return df
    df = iteratively_process_partial(df, max_partial)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>import io
df['raw_string'] = df[stripped_text].apply(io.StringIO)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>import io
df['raw_string'] = df[stripped_text].apply(io.StringIO
                                           )</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>df['first_character2'] = np.where(
            df['first_character'].astype(str).str.len() == 1,
            df['first_character'].astype(str),
           0
        )</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>df['first_character2'] = np.where(
            df['first_character'].astype(str).str.len() == 1,
            1,
           0
        )</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>df['first_character2'] = np.where(
            df['first_character'].astype(str).str.len() == 1,
            df['first_character'].astype(str),
            np.nan
        )</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>def filterTheDict(dictObj, callback):
                newDict = dict()
                # Iterate over all the items in dictionary
                for (key, value) in dictObj.items():
                    # Check if item satisfies the given condition then add to new dict
                    if callback((key, value)):
                        newDict[key] = value
                return newDict
fn_filter_dict = filterTheDict(first_name_frequencies, lambda elem: elem[0] &gt; 0.0005)
ln_filter_dict = filterTheDict(first_name_frequencies, lambda elem: elem[0] &gt; 0.005)
            # where we already think the name is a person check to make sure it contains one of the names listed in
            # census names dict
            # if it does keep it as a person else business
dataframe_dd['name5'] = np.where(
                (dataframe_dd[type_col] == 'person') &amp;
                (dataframe_dd['temp_name'].str.contains('|'.join(fn_filter_dict))) &amp;
                (dataframe_dd['temp_name'].str.contains('|'.join(ln_filter_dict))),
                'person',
                'business'
            )</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>def filterTheDict(dictObj, callback):
                newDict = dict()
                # Iterate over all the items in dictionary
                for (key, value) in dictObj.items():
                    # Check if item satisfies the given condition then add to new dict
                    if callback((key, value)):
                        newDict[key] = value
                return newDict
fn_filter_dict = filterTheDict(first_name_frequencies, lambda elem:elem[0] &gt; 0.0005)
ln_filter_dict = filterTheDict(first_name_frequencies, lambda elem: elem[0] &gt; 0.005)
            # where we already think the name is a person check to make sure it contains one of the names listed in
            # census names dict
            # if it does keep it as a person else business
dataframe_dd['name5'] = np.where(
                (dataframe_dd[type_col] == 'person') &amp;
                (dataframe_dd['temp_name'].str.contains('|'.join(fn_filter_dict))) &amp;
                (dataframe_dd['temp_name'].str.contains('|'.join(ln_filter_dict))),
                'person',
                'business'
            )</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
    </expressions>
    <expressions id="watch">
      <expression>
        <expression-string>sd_shape = sd_bus.shape[0]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>sf_bus.sort_values('num_locations', ascending=False)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>la_bus.groupby(['naics_descr', 'naics']).agg(**{'num':('location_id','count')}).sort_values('num',ascending=False)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>sf_bus.groupby(['naics_descr', 'naics']).agg(**{'num':('location_id','count')}).sort_values('num',ascending=False)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>sf_bus.groupby(['naics_descr', 'naics']).agg(**{'num':('location_id','count')}).sort_values('count',ascending=False)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>la_bus.groupby(['naics_descr', 'naics']).agg(**{'num':('location_id','count')})</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>sf_bus.groupby(['naics_descr', 'naics']).agg(**{'num':('location_id','count')})</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>sf_bus.groupby(['naics_descr', 'naics']).agg(**{'location_id':'count'})</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>la_bus.groupby(['naics_descr', 'naics']).agg('count')</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
    <expressions id="evaluateExpression">
      <expression>
        <expression-string>df[classification_col].value_counts()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>df[df[classification_col] == value]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>df['header'] = np.where(df[classification_col]=='header', df[text_col], np.nan)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>df2 = df[df[classification_col] !='header']</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>df['header'].fillna(method='ffill', inplace=True)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>df2 = iteratively_process_partial(df, max_partial)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>df['shift_'] = df[n_text].shift(-1)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>df['shift'] = df[n_text].shift(1)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>df[~((df['running_partial'] == max_partial) &amp; (df[classification_col]=='partial'))]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
  </component>
</project>